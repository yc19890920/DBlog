# -*- coding: utf-8 -*-

"""
Django settings for operation project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')ld$-iyr13g_0%rw_^gi+$6y&-52!gj7zhh=%=(b8^#6b!vzc0'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False

ALLOWED_HOSTS = [
    "192.168.52.128",
    "192.168.52.130",
    '127.0.0.1',
    "djangoweb.com",
    "www.djangoweb.com",
    "192.168.52.133",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 'debug_toolbar',
    'auditlog',
    "rest_framework",
    'bootstrapform',
    'app.core',
    'app.setting',
    'app.blog',
    'app.rest',
    'gunicorn',
    'django_logtail',
]

# debug_toolbar
INTERNAL_IPS = ('127.0.0.1',) #测试环境是在本机

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'middleware.x_forwarded_for.XForwardedForMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
    # 'middleware.login.MyLoginMiddleware',
]

ROOT_URLCONF = 'dblog.urls'
# auth 模块
AUTH_USER_MODEL = 'core.User'
# 登录url
LOGIN_URL = '/core/login'
LOGIN_REDIRECT_URL = '/core/home'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'dblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'dblog',                      # Or path to database file if using sqlite3.
        'USER': 'dblog',                      # Not used with sqlite3.
        'PASSWORD': 'dblog123',                  # Not used with sqlite3.
        'HOST': '192.168.52.128',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '3306',                      # Set to empty string for default. Not used with sqlite3.
    },
}

# ---------------------------
# CACHES
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.52.128:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PARSER_CLASS": "redis.connection.HiredisParser",
        }
    }
}


# ---------------------------
# restful
REST_FRAMEWORK = {
    ## Setting the pagination style  分页
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,

    # Use hyperlinked styles by default.
    # Only used if the `serializer_class` attribute is not set on a view.
    'DEFAULT_MODEL_SERIALIZER_CLASS':
        'rest_framework.serializers.HyperlinkedModelSerializer',

    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        #'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'rest_framework.permissions.IsAdminUser',
    ]
}
# ---------------------------

# Name of cache backend to cache user agents. If it not specified default
# cache alias will be used. Set to `None` to disable caching.
USER_AGENTS_CACHE = 'default'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

FAIL2BAN_SETTING_FILE = '/home/python/Linux-Operation/jail.conf'
# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

# TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#USE_X_FORWARDED_HOST = True
#FORCE_SCRIPT_NAME = '/operation'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
# MEDIA_URL = os.path.join(BASE_DIR,'media')
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

STATIC_URL = '/static/'
# STATIC_PATH = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
    # MEDIA_ROOT,
)


# ---------------------------


# ---------------------------

# Celery settings
CELERY_BROKER_URL = 'redis://192.168.52.128:6379/0'

#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_DEFAULT_QUEUE =  'dblog:celery' # 	默认队列
CELERY_ACCEPT_CONTENT = ["json"]            # 指定任务接受的内容类型.
CELERY_RESULT_BACKEND = 'redis://192.168.52.128:6379/0'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TASK_RESULT_EXPIRES = 60 * 5 * 1   # 指定任务过期时间 1小时
CELERY_ENABLE_UTC = True
CELERY_TIMEZONE = TIME_ZONE

# ---------------------------
"""

# email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.sina.com"
EMAIL_HOST_PASSWORD = 'hided'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER = "test@sina.com"
EMAIL_PORT = 25
EMAIL_USE_TLS = True

"""


"""
# 编写日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'log_file': {
            'level': "INFO",
            "class": "logging.FileHandler",
            "formatter": "verbose",
            "filename": os.path.join(BASE_DIR, "logs/django.log"),
        },
        "faillog": {
            'level': "ERROR",
            "class": "logging.FileHandler",
            "formatter": "verbose",
            "filename": os.path.join(BASE_DIR, "logs/faillog.log"),
        },
        "dberror": {
            'level': "ERROR",
            "class": "logging.FileHandler",
            "formatter": "verbose",
            "filename": os.path.join(BASE_DIR, "logs/dberror.log"),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': False,
            'level': 'INFO',
        },
        'app': {
            'handlers': ['console', 'log_file'],
            'propagate': False,
            'level': 'DEBUG' if DEBUG else 'INFO',
        },
        'django.request': {
            'handlers': ['log_file'],
            'level': 'ERROR',
            'propagate': False,
        },
        "faillog": {
            "handlers": ['console', "faillog"],
            "propagate": False,
            "level": "ERROR",
        },
        "dberror": {
            "handlers": ['console', "dberror"],
            "propagate": False,
            "level": "ERROR",
        },
    }
}
"""

